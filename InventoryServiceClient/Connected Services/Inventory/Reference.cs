//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InventoryServiceClient.Inventory {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventoryItem", Namespace="http://schemas.datacontract.org/2004/07/InventoryService.Model")]
    [System.SerializableAttribute()]
    public partial class InventoryItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SkuField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Sku {
            get {
                return this.SkuField;
            }
            set {
                if ((this.SkuField.Equals(value) != true)) {
                    this.SkuField = value;
                    this.RaisePropertyChanged("Sku");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Inventory.IInventoryService")]
    public interface IInventoryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetInventoryItem", ReplyAction="http://tempuri.org/IInventoryService/GetInventoryItemResponse")]
        InventoryItem GetInventoryItem(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetInventoryItem", ReplyAction="http://tempuri.org/IInventoryService/GetInventoryItemResponse")]
        System.Threading.Tasks.Task<InventoryItem> GetInventoryItemAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetInventoryItems", ReplyAction="http://tempuri.org/IInventoryService/GetInventoryItemsResponse")]
        InventoryItem[] GetInventoryItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetInventoryItems", ReplyAction="http://tempuri.org/IInventoryService/GetInventoryItemsResponse")]
        System.Threading.Tasks.Task<InventoryItem[]> GetInventoryItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/AddInventoryItem", ReplyAction="http://tempuri.org/IInventoryService/AddInventoryItemResponse")]
        void AddInventoryItem(InventoryItem newItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/AddInventoryItem", ReplyAction="http://tempuri.org/IInventoryService/AddInventoryItemResponse")]
        System.Threading.Tasks.Task AddInventoryItemAsync(InventoryItem newItem);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInventoryServiceChannel : IInventoryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InventoryServiceClient : System.ServiceModel.ClientBase<IInventoryService>, IInventoryService {
        
        public InventoryServiceClient() {
        }
        
        public InventoryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InventoryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InventoryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InventoryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public InventoryItem GetInventoryItem(System.Guid id) {
            return base.Channel.GetInventoryItem(id);
        }
        
        public System.Threading.Tasks.Task<InventoryItem> GetInventoryItemAsync(System.Guid id) {
            return base.Channel.GetInventoryItemAsync(id);
        }
        
        public InventoryItem[] GetInventoryItems() {
            return base.Channel.GetInventoryItems();
        }
        
        public System.Threading.Tasks.Task<InventoryItem[]> GetInventoryItemsAsync() {
            return base.Channel.GetInventoryItemsAsync();
        }
        
        public void AddInventoryItem(InventoryItem newItem) {
            base.Channel.AddInventoryItem(newItem);
        }
        
        public System.Threading.Tasks.Task AddInventoryItemAsync(InventoryItem newItem) {
            return base.Channel.AddInventoryItemAsync(newItem);
        }
    }
}
